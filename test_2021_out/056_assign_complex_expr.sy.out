// Use complex expression in assign structure
int main () {
    int a;
    int b;
    int c;
    int d;
    int result;
    a = 5;
    b = 5;
    c = 1;
    d = -2;
    result = (d * 1 / 2)  + (a - b) - -(c + 3) % 2;
    putint(result);
    result = ((d % 2 + 67) + -(a - b) - -((c + 2) % 2));
    result = result + 3;
    putint(result);
    return 0;
}

input_file: test_2021/056_assign_complex_expr.sy
line 2, col 1, TOKEN_INT
line 2, col 5, TOKEN_IDENTIFIER, main
line 2, col 10, TOKEN_LEFT_PARENTHESES
line 2, col 11, TOKEN_RIGHT_PARENTHESES
line 2, col 13, TOKEN_LEFT_BRACES
line 3, col 5, TOKEN_INT
line 3, col 9, TOKEN_IDENTIFIER, a
line 3, col 10, TOKEN_SEMICOLON
line 4, col 5, TOKEN_INT
line 4, col 9, TOKEN_IDENTIFIER, b
line 4, col 10, TOKEN_SEMICOLON
line 5, col 5, TOKEN_INT
line 5, col 9, TOKEN_IDENTIFIER, c
line 5, col 10, TOKEN_SEMICOLON
line 6, col 5, TOKEN_INT
line 6, col 9, TOKEN_IDENTIFIER, d
line 6, col 10, TOKEN_SEMICOLON
line 7, col 5, TOKEN_INT
line 7, col 9, TOKEN_IDENTIFIER, result
line 7, col 15, TOKEN_SEMICOLON
line 8, col 5, TOKEN_IDENTIFIER, a
line 8, col 7, TOKEN_ASSIGN
line 8, col 9, TOKEN_INTEGER, 5
line 8, col 10, TOKEN_SEMICOLON
line 9, col 5, TOKEN_IDENTIFIER, b
line 9, col 7, TOKEN_ASSIGN
line 9, col 9, TOKEN_INTEGER, 5
line 9, col 10, TOKEN_SEMICOLON
line 10, col 5, TOKEN_IDENTIFIER, c
line 10, col 7, TOKEN_ASSIGN
line 10, col 9, TOKEN_INTEGER, 1
line 10, col 10, TOKEN_SEMICOLON
line 11, col 5, TOKEN_IDENTIFIER, d
line 11, col 7, TOKEN_ASSIGN
line 11, col 9, TOKEN_SUB
line 11, col 10, TOKEN_INTEGER, 2
line 11, col 11, TOKEN_SEMICOLON
line 12, col 5, TOKEN_IDENTIFIER, result
line 12, col 12, TOKEN_ASSIGN
line 12, col 14, TOKEN_LEFT_PARENTHESES
line 12, col 15, TOKEN_IDENTIFIER, d
line 12, col 17, TOKEN_MUL
line 12, col 19, TOKEN_INTEGER, 1
line 12, col 21, TOKEN_DIV
line 12, col 23, TOKEN_INTEGER, 2
line 12, col 24, TOKEN_RIGHT_PARENTHESES
line 12, col 27, TOKEN_ADD
line 12, col 29, TOKEN_LEFT_PARENTHESES
line 12, col 30, TOKEN_IDENTIFIER, a
line 12, col 32, TOKEN_SUB
line 12, col 34, TOKEN_IDENTIFIER, b
line 12, col 35, TOKEN_RIGHT_PARENTHESES
line 12, col 37, TOKEN_SUB
line 12, col 39, TOKEN_SUB
line 12, col 40, TOKEN_LEFT_PARENTHESES
line 12, col 41, TOKEN_IDENTIFIER, c
line 12, col 43, TOKEN_ADD
line 12, col 45, TOKEN_INTEGER, 3
line 12, col 46, TOKEN_RIGHT_PARENTHESES
line 12, col 48, TOKEN_MOD
line 12, col 50, TOKEN_INTEGER, 2
line 12, col 51, TOKEN_SEMICOLON
line 13, col 5, TOKEN_IDENTIFIER, putint
line 13, col 11, TOKEN_LEFT_PARENTHESES
line 13, col 12, TOKEN_IDENTIFIER, result
line 13, col 18, TOKEN_RIGHT_PARENTHESES
line 13, col 19, TOKEN_SEMICOLON
line 14, col 5, TOKEN_IDENTIFIER, result
line 14, col 12, TOKEN_ASSIGN
line 14, col 14, TOKEN_LEFT_PARENTHESES
line 14, col 15, TOKEN_LEFT_PARENTHESES
line 14, col 16, TOKEN_IDENTIFIER, d
line 14, col 18, TOKEN_MOD
line 14, col 20, TOKEN_INTEGER, 2
line 14, col 22, TOKEN_ADD
line 14, col 24, TOKEN_INTEGER, 67
line 14, col 26, TOKEN_RIGHT_PARENTHESES
line 14, col 28, TOKEN_ADD
line 14, col 30, TOKEN_SUB
line 14, col 31, TOKEN_LEFT_PARENTHESES
line 14, col 32, TOKEN_IDENTIFIER, a
line 14, col 34, TOKEN_SUB
line 14, col 36, TOKEN_IDENTIFIER, b
line 14, col 37, TOKEN_RIGHT_PARENTHESES
line 14, col 39, TOKEN_SUB
line 14, col 41, TOKEN_SUB
line 14, col 42, TOKEN_LEFT_PARENTHESES
line 14, col 43, TOKEN_LEFT_PARENTHESES
line 14, col 44, TOKEN_IDENTIFIER, c
line 14, col 46, TOKEN_ADD
line 14, col 48, TOKEN_INTEGER, 2
line 14, col 49, TOKEN_RIGHT_PARENTHESES
line 14, col 51, TOKEN_MOD
line 14, col 53, TOKEN_INTEGER, 2
line 14, col 54, TOKEN_RIGHT_PARENTHESES
line 14, col 55, TOKEN_RIGHT_PARENTHESES
line 14, col 56, TOKEN_SEMICOLON
line 15, col 5, TOKEN_IDENTIFIER, result
line 15, col 12, TOKEN_ASSIGN
line 15, col 14, TOKEN_IDENTIFIER, result
line 15, col 21, TOKEN_ADD
line 15, col 23, TOKEN_INTEGER, 3
line 15, col 24, TOKEN_SEMICOLON
line 16, col 5, TOKEN_IDENTIFIER, putint
line 16, col 11, TOKEN_LEFT_PARENTHESES
line 16, col 12, TOKEN_IDENTIFIER, result
line 16, col 18, TOKEN_RIGHT_PARENTHESES
line 16, col 19, TOKEN_SEMICOLON
line 17, col 5, TOKEN_RETURN
line 17, col 12, TOKEN_INTEGER, 0
line 17, col 13, TOKEN_SEMICOLON
line 18, col 1, TOKEN_RIGHT_BRACES
