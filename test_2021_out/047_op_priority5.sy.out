int a = 1;
int b = 0;
int c = 1;
int d = 2;
int e = 4;
int main()
{
	int flag=0;
	if(a * b / c == e + d && a * (a + b) + c <= d + e || a - (b * c) == d - a / c)
	{
		flag=1;
	}
	putint(flag);
	return flag;
}
input_file: test_2021/047_op_priority5.sy
line 1, col 1, TOKEN_INT
line 1, col 5, TOKEN_IDENTIFIER, a
line 1, col 7, TOKEN_ASSIGN
line 1, col 9, TOKEN_INTEGER, 1
line 1, col 10, TOKEN_SEMICOLON
line 2, col 1, TOKEN_INT
line 2, col 5, TOKEN_IDENTIFIER, b
line 2, col 7, TOKEN_ASSIGN
line 2, col 9, TOKEN_INTEGER, 0
line 2, col 10, TOKEN_SEMICOLON
line 3, col 1, TOKEN_INT
line 3, col 5, TOKEN_IDENTIFIER, c
line 3, col 7, TOKEN_ASSIGN
line 3, col 9, TOKEN_INTEGER, 1
line 3, col 10, TOKEN_SEMICOLON
line 4, col 1, TOKEN_INT
line 4, col 5, TOKEN_IDENTIFIER, d
line 4, col 7, TOKEN_ASSIGN
line 4, col 9, TOKEN_INTEGER, 2
line 4, col 10, TOKEN_SEMICOLON
line 5, col 1, TOKEN_INT
line 5, col 5, TOKEN_IDENTIFIER, e
line 5, col 7, TOKEN_ASSIGN
line 5, col 9, TOKEN_INTEGER, 4
line 5, col 10, TOKEN_SEMICOLON
line 6, col 1, TOKEN_INT
line 6, col 5, TOKEN_IDENTIFIER, main
line 6, col 9, TOKEN_LEFT_PARENTHESES
line 6, col 10, TOKEN_RIGHT_PARENTHESES
line 7, col 1, TOKEN_LEFT_BRACES
line 8, col 2, TOKEN_INT
line 8, col 6, TOKEN_IDENTIFIER, flag
line 8, col 10, TOKEN_ASSIGN
line 8, col 11, TOKEN_INTEGER, 0
line 8, col 12, TOKEN_SEMICOLON
line 9, col 2, TOKEN_IF
line 9, col 4, TOKEN_LEFT_PARENTHESES
line 9, col 5, TOKEN_IDENTIFIER, a
line 9, col 7, TOKEN_MUL
line 9, col 9, TOKEN_IDENTIFIER, b
line 9, col 11, TOKEN_DIV
line 9, col 13, TOKEN_IDENTIFIER, c
line 9, col 15, TOKEN_EQ
line 9, col 18, TOKEN_IDENTIFIER, e
line 9, col 20, TOKEN_ADD
line 9, col 22, TOKEN_IDENTIFIER, d
line 9, col 24, TOKEN_AND
line 9, col 27, TOKEN_IDENTIFIER, a
line 9, col 29, TOKEN_MUL
line 9, col 31, TOKEN_LEFT_PARENTHESES
line 9, col 32, TOKEN_IDENTIFIER, a
line 9, col 34, TOKEN_ADD
line 9, col 36, TOKEN_IDENTIFIER, b
line 9, col 37, TOKEN_RIGHT_PARENTHESES
line 9, col 39, TOKEN_ADD
line 9, col 41, TOKEN_IDENTIFIER, c
line 9, col 43, TOKEN_LTE
line 9, col 46, TOKEN_IDENTIFIER, d
line 9, col 48, TOKEN_ADD
line 9, col 50, TOKEN_IDENTIFIER, e
line 9, col 52, TOKEN_OR
line 9, col 55, TOKEN_IDENTIFIER, a
line 9, col 57, TOKEN_SUB
line 9, col 59, TOKEN_LEFT_PARENTHESES
line 9, col 60, TOKEN_IDENTIFIER, b
line 9, col 62, TOKEN_MUL
line 9, col 64, TOKEN_IDENTIFIER, c
line 9, col 65, TOKEN_RIGHT_PARENTHESES
line 9, col 67, TOKEN_EQ
line 9, col 70, TOKEN_IDENTIFIER, d
line 9, col 72, TOKEN_SUB
line 9, col 74, TOKEN_IDENTIFIER, a
line 9, col 76, TOKEN_DIV
line 9, col 78, TOKEN_IDENTIFIER, c
line 9, col 79, TOKEN_RIGHT_PARENTHESES
line 10, col 2, TOKEN_LEFT_BRACES
line 11, col 3, TOKEN_IDENTIFIER, flag
line 11, col 7, TOKEN_ASSIGN
line 11, col 8, TOKEN_INTEGER, 1
line 11, col 9, TOKEN_SEMICOLON
line 12, col 2, TOKEN_RIGHT_BRACES
line 13, col 2, TOKEN_IDENTIFIER, putint
line 13, col 8, TOKEN_LEFT_PARENTHESES
line 13, col 9, TOKEN_IDENTIFIER, flag
line 13, col 13, TOKEN_RIGHT_PARENTHESES
line 13, col 14, TOKEN_SEMICOLON
line 14, col 2, TOKEN_RETURN
line 14, col 9, TOKEN_IDENTIFIER, flag
line 14, col 13, TOKEN_SEMICOLON
line 15, col 1, TOKEN_RIGHT_BRACES
