.arch armv8-a
.text
.align 2
.syntax unified
.arm
.global main

kkk:
kkk35:
  vpush	{ d8, d9, d10, d11, d12, d13, d14, d15 }
  push	{ r4, r5, r6, r7, r8, r9, r10, r11, lr }
  mov	fp, sp
  sub	sp, sp, #28
  mov	r10, r0
  mov	r9, r1
  mov	r8, r2
  mov	r7, r3
  ldr	r6, [fp, #100]
  ldr	r4, [fp, #104]
  str	r4, [fp, #-4]
  sub	r5, fp, #4
  str	r10, [r5]
  sub	r5, fp, #8
  str	r9, [r5]
  sub	r5, fp, #12
  str	r8, [r5]
  sub	r5, fp, #16
  str	r7, [r5]
  sub	r5, fp, #20
  str	r6, [r5]
  sub	r5, fp, #24
  ldr	r4, [fp, #-4]
  str	r4, [r5]
  mov	r0, #0
  add	sp, sp, #28
  pop	{ r4, r5, r6, r7, r8, r9, r10, r11, lr }
  vpop	{ d8, d9, d10, d11, d12, d13, d14, d15 }
  bx	lr

main:
main43:
  vpush	{ d8, d9, d10, d11, d12, d13, d14, d15 }
  push	{ r4, r5, r6, r7, r8, r9, r10, r11, lr }
  mov	fp, sp
  sub	sp, sp, #0
  sub	sp, sp, #8
  mov	r3, #6
  str	r3, [sp, #4]
  mov	r3, #5
  str	r3, [sp, #0]
  mov	r3, #4
  mov	r2, #3
  mov	r1, #2
  mov	r0, #1
  bl	kkk
  add	sp, sp, #8
  mov	r10, r0
  mov	r10, #0
  vmov	s29, r10
  vcvt.f32.s32	s28, s29
  vmov.f32	s0, s28
  add	sp, sp, #0
  pop	{ r4, r5, r6, r7, r8, r9, r10, r11, lr }
  vpop	{ d8, d9, d10, d11, d12, d13, d14, d15 }
  bx	lr


@ here are the globals +-+^_^+-=
.data
.align 2
